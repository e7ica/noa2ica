<script type="module">

    // 1. Modelo de Estado para los Modales //
    const modalState = {
        hasAttachment: false,
        hasOtros: false,
        hasEmplazamiento: false,
        hasSancion: false,
    }; // ...otros modales

    // 2. Secuencia de Modales //
    const modalSequence = [
        'attachmentModal',
        'otrosModal',
        'emplazamientoModal',
        'sancionModal'
    ];

    // 3. Pipeline para Ejecutar los Modales
    const modalPipeline = (state, sequence) => {
        sequence.forEach((modal) => {
            if (state[modal]) {
                const modalElement = document.getElementById(modal);
                modalElement.classList.remove('hidden');
                modalElement.classList.add('block');
            }
        });
    };

    function processModals(sequenceIndex = 0) {
        if (sequenceIndex >= modalSequence.length) {
            document.querySelector('form').submit();
            return;
        }

        const currentModal = modalSequence[sequenceIndex];

        // Comprueba si el modal debe mostrarse según el estado
        if (modalState[currentModal]) {
            showModal(currentModal, () => processModals(sequenceIndex + 1));
        } else {
            processModals(sequenceIndex + 1);
        }
    }

    function showModal(modalId, onClose) {
        const modalElement = document.getElementById(modalId);
        modalElement.classList.remove('hidden');
        modalElement.classList.add('flex');

        // Manejar cierre del modal
        modalElement.querySelector('.close-modal-btn').addEventListener('click', () => {
            modalElement.classList.add('hidden');
            modalElement.classList.remove('flex');
            onClose();
        });
    }


    // 4. Interacción del Usuario //
    document.getElementById('nextBtn').addEventListener('click', (e) => {
        e.preventDefault();
        modalState.hasAttachment = {{ question.can_attach | json_encode() | raw }};
        modalState.hasOtros = {{ question.can_select_others | json_encode() | raw }};
        modalState.hasEmplazamiento = {{ question.can_summon | json_encode() | raw }};
        modalState.hasSancion = false; /* alguna lógica para determinar si se debe mostrar la sanción */;

        processModals();
    });


</script>